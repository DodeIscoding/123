{"ast":null,"code":"var _jsxFileName = \"/home/leegenho/123/Node_server/client/src/components/views/test/PopupPostCode.js\";\nimport React from 'react';\nimport DaumPostcode from \"react-daum-postcode\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet count = document.getElementsByClassName(\".data-totalcount\").value;\n\nconst PopupPostCode = props => {\n  // 우편번호 검색 후 주소 클릭 시 실행될 함수, data callback 용\n  const dasd = data => {};\n\n  const handlePostCode = data => {\n    let fullAddress = data.address;\n    let extraAddress = '';\n\n    if (data.addressType === 'R') {\n      if (data.bname !== '') {\n        extraAddress += data.bname;\n      }\n\n      if (data.buildingName !== '') {\n        extraAddress += extraAddress !== '' ? `, ${data.buildingName}` : data.buildingName;\n      }\n\n      fullAddress += extraAddress !== '' ? ` (${extraAddress})` : '';\n    }\n\n    console.log(data);\n    console.log(fullAddress);\n    console.log(data.zonecode);\n    console.log(props);\n    console.log(count);\n    props.onClose();\n    document.getElementById(\"output\").innerText = data.query;\n  };\n\n  const postCodeStyle = {\n    display: \"block\",\n    position: \"absolute\",\n    width: \"365px\",\n    height: \"460px\",\n    padding: \"7px\"\n  };\n  const postCode_btn = {\n    position: \"absolute\",\n    width: \"100px\",\n    height: \"100px\",\n    margin: \"450px 0px 0px 0px\"\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(DaumPostcode, {\n      style: postCodeStyle,\n      onComplete: handlePostCode,\n      onSearch: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: () => {\n        props.onClose();\n      },\n      style: postCode_btn,\n      children: \"\\uB2EB\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n\n_c = PopupPostCode;\nexport default PopupPostCode;\n\nvar _c;\n\n$RefreshReg$(_c, \"PopupPostCode\");","map":{"version":3,"names":["React","DaumPostcode","count","document","getElementsByClassName","value","PopupPostCode","props","dasd","data","handlePostCode","fullAddress","address","extraAddress","addressType","bname","buildingName","console","log","zonecode","onClose","getElementById","innerText","query","postCodeStyle","display","position","width","height","padding","postCode_btn","margin"],"sources":["/home/leegenho/123/Node_server/client/src/components/views/test/PopupPostCode.js"],"sourcesContent":["import React from 'react';\nimport DaumPostcode from \"react-daum-postcode\";\nlet count = document.getElementsByClassName(\".data-totalcount\").value\nconst PopupPostCode = (props) => {\n\t// 우편번호 검색 후 주소 클릭 시 실행될 함수, data callback 용\n    const dasd = (data) => {\n\n    }\n    const handlePostCode = (data) => {\n        let fullAddress = data.address;\n        let extraAddress = ''; \n        \n        if (data.addressType === 'R') {\n          if (data.bname !== '') {\n            extraAddress += data.bname;\n          }\n          if (data.buildingName !== '') {\n            extraAddress += (extraAddress !== '' ? `, ${data.buildingName}` : data.buildingName);\n          }\n          fullAddress += (extraAddress !== '' ? ` (${extraAddress})` : '');\n        }\n        console.log(data)\n        console.log(fullAddress)\n        console.log(data.zonecode)\n        console.log(props)\n        console.log(count)\n        props.onClose()\n        document.getElementById(\"output\").innerText = data.query\n    }\n    \n    const postCodeStyle = {\n        display: \"block\",\n        position: \"absolute\",\n        width: \"365px\",\n        height: \"460px\",\n        padding: \"7px\",\n      };\n      const postCode_btn = {\n        position: \"absolute\",\n        width: \"100px\",\n        height: \"100px\",\n        margin: \"450px 0px 0px 0px\",\n      };\n    return(\n        <div>\n                <DaumPostcode style={postCodeStyle} onComplete={handlePostCode} onSearch />\n                <button type='button' onClick={() => {props.onClose()}} style={postCode_btn}>닫기</button>\n        </div>\n    )\n}\n \nexport default PopupPostCode;"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,qBAAzB;;AACA,IAAIC,KAAK,GAAGC,QAAQ,CAACC,sBAAT,CAAgC,kBAAhC,EAAoDC,KAAhE;;AACA,MAAMC,aAAa,GAAIC,KAAD,IAAW;EAChC;EACG,MAAMC,IAAI,GAAIC,IAAD,IAAU,CAEtB,CAFD;;EAGA,MAAMC,cAAc,GAAID,IAAD,IAAU;IAC7B,IAAIE,WAAW,GAAGF,IAAI,CAACG,OAAvB;IACA,IAAIC,YAAY,GAAG,EAAnB;;IAEA,IAAIJ,IAAI,CAACK,WAAL,KAAqB,GAAzB,EAA8B;MAC5B,IAAIL,IAAI,CAACM,KAAL,KAAe,EAAnB,EAAuB;QACrBF,YAAY,IAAIJ,IAAI,CAACM,KAArB;MACD;;MACD,IAAIN,IAAI,CAACO,YAAL,KAAsB,EAA1B,EAA8B;QAC5BH,YAAY,IAAKA,YAAY,KAAK,EAAjB,GAAuB,KAAIJ,IAAI,CAACO,YAAa,EAA7C,GAAiDP,IAAI,CAACO,YAAvE;MACD;;MACDL,WAAW,IAAKE,YAAY,KAAK,EAAjB,GAAuB,KAAIA,YAAa,GAAxC,GAA6C,EAA7D;IACD;;IACDI,OAAO,CAACC,GAAR,CAAYT,IAAZ;IACAQ,OAAO,CAACC,GAAR,CAAYP,WAAZ;IACAM,OAAO,CAACC,GAAR,CAAYT,IAAI,CAACU,QAAjB;IACAF,OAAO,CAACC,GAAR,CAAYX,KAAZ;IACAU,OAAO,CAACC,GAAR,CAAYhB,KAAZ;IACAK,KAAK,CAACa,OAAN;IACAjB,QAAQ,CAACkB,cAAT,CAAwB,QAAxB,EAAkCC,SAAlC,GAA8Cb,IAAI,CAACc,KAAnD;EACH,CApBD;;EAsBA,MAAMC,aAAa,GAAG;IAClBC,OAAO,EAAE,OADS;IAElBC,QAAQ,EAAE,UAFQ;IAGlBC,KAAK,EAAE,OAHW;IAIlBC,MAAM,EAAE,OAJU;IAKlBC,OAAO,EAAE;EALS,CAAtB;EAOE,MAAMC,YAAY,GAAG;IACnBJ,QAAQ,EAAE,UADS;IAEnBC,KAAK,EAAE,OAFY;IAGnBC,MAAM,EAAE,OAHW;IAInBG,MAAM,EAAE;EAJW,CAArB;EAMF,oBACI;IAAA,wBACQ,QAAC,YAAD;MAAc,KAAK,EAAEP,aAArB;MAAoC,UAAU,EAAEd,cAAhD;MAAgE,QAAQ;IAAxE;MAAA;MAAA;MAAA;IAAA,QADR,eAEQ;MAAQ,IAAI,EAAC,QAAb;MAAsB,OAAO,EAAE,MAAM;QAACH,KAAK,CAACa,OAAN;MAAgB,CAAtD;MAAwD,KAAK,EAAEU,YAA/D;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFR;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAMH,CA9CD;;KAAMxB,a;AAgDN,eAAeA,aAAf"},"metadata":{},"sourceType":"module"}