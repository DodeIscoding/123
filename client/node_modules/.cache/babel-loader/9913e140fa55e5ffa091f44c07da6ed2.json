{"ast":null,"code":"var _jsxFileName = \"/home/leegenho/123/Node_server/client/src/components/views/Page/test.js\",\n    _s = $RefreshSig$();\n\n/* global kakao */\nimport React, { useEffect } from \"react\";\nimport cn from \"classnames\";\nimport \"../html/KakaoMap.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  kakao\n} = window;\n\nconst Map = () => {\n  _s();\n\n  const [state, setState] = useState({\n    // 지도의 초기 위치\n    center: {\n      lat: 37.49676871972202,\n      lng: 127.02474726969814\n    },\n    // 지도 위치 변경시 panto를 이용할지(부드럽게 이동)\n    isPanto: true\n  });\n  const [searchAddress, SetSearchAddress] = useState(); // 키워드 입력후 검색 클릭 시 원하는 키워드의 주소로 이동\n\n  const SearchMap = () => {\n    const ps = new kakao.maps.services.Places();\n\n    const placesSearchCB = function (data, status, pagination) {\n      if (status === kakao.maps.services.Status.OK) {\n        const newSearch = data[0];\n        setState({\n          center: {\n            lat: newSearch.y,\n            lng: newSearch.x\n          }\n        });\n      }\n    };\n\n    ps.keywordSearch(`${searchAddress}`, placesSearchCB);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Map // 지도를 표시할 Container\n  , {\n    center: state.center,\n    isPanto: state.isPanto,\n    style: {\n      // 지도의 크기\n      width: \"100%\",\n      height: \"450px\"\n    },\n    level: 3 // 지도의 확대 레벨\n    ,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleSearchAddress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: SearchMap,\n        children: \"\\uD074\\uB9AD\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 8\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 1\n  }, this);\n};\n\n_s(Map, \"W0nuoKZ60TXrLbQug9NdtzG9Srk=\");\n\n_c = Map;\nexport default Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","useEffect","cn","kakao","window","Map","state","setState","useState","center","lat","lng","isPanto","searchAddress","SetSearchAddress","SearchMap","ps","maps","services","Places","placesSearchCB","data","status","pagination","Status","OK","newSearch","y","x","keywordSearch","width","height","handleSearchAddress"],"sources":["/home/leegenho/123/Node_server/client/src/components/views/Page/test.js"],"sourcesContent":["/* global kakao */\nimport React, { useEffect } from \"react\";\nimport cn from \"classnames\";\nimport \"../html/KakaoMap.css\";\n\nconst { kakao } = window;\nconst Map = () => {\n    \nconst [state, setState] = useState({\n    // 지도의 초기 위치\n    center: { lat: 37.49676871972202, lng: 127.02474726969814 },\n    // 지도 위치 변경시 panto를 이용할지(부드럽게 이동)\n    isPanto: true,\n  });\n  const [searchAddress, SetSearchAddress] = useState();\n  \n  // 키워드 입력후 검색 클릭 시 원하는 키워드의 주소로 이동\n  const SearchMap = () => {\n    const ps = new kakao.maps.services.Places()\n    const placesSearchCB = function(data, status, pagination) {\n      if (status === kakao.maps.services.Status.OK) {\n        const newSearch = data[0]\n        setState({\n          center: { lat: newSearch.y, lng: newSearch.x }\n        })\n      }\n    };\n    ps.keywordSearch(`${searchAddress}`, placesSearchCB); \n  }\n  \n\n\n  return (\n<Map // 지도를 표시할 Container\n  center={state.center}\n  isPanto={state.isPanto}\n  style={{\n       // 지도의 크기\n       width: \"100%\",\n       height: \"450px\",\n      }}\n      level={3} // 지도의 확대 레벨\n      ><div>\n      <input onChange={handleSearchAddress}></input>\n      <button onClick={SearchMap}>클릭</button>\n    </div></Map>\n      \n      \n\n  );\n};\n\nexport default Map;"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,EAAP,MAAe,YAAf;AACA,OAAO,sBAAP;;AAEA,MAAM;EAAEC;AAAF,IAAYC,MAAlB;;AACA,MAAMC,GAAG,GAAG,MAAM;EAAA;;EAElB,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBC,QAAQ,CAAC;IAC/B;IACAC,MAAM,EAAE;MAAEC,GAAG,EAAE,iBAAP;MAA0BC,GAAG,EAAE;IAA/B,CAFuB;IAG/B;IACAC,OAAO,EAAE;EAJsB,CAAD,CAAlC;EAME,MAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCN,QAAQ,EAAlD,CARgB,CAUhB;;EACA,MAAMO,SAAS,GAAG,MAAM;IACtB,MAAMC,EAAE,GAAG,IAAIb,KAAK,CAACc,IAAN,CAAWC,QAAX,CAAoBC,MAAxB,EAAX;;IACA,MAAMC,cAAc,GAAG,UAASC,IAAT,EAAeC,MAAf,EAAuBC,UAAvB,EAAmC;MACxD,IAAID,MAAM,KAAKnB,KAAK,CAACc,IAAN,CAAWC,QAAX,CAAoBM,MAApB,CAA2BC,EAA1C,EAA8C;QAC5C,MAAMC,SAAS,GAAGL,IAAI,CAAC,CAAD,CAAtB;QACAd,QAAQ,CAAC;UACPE,MAAM,EAAE;YAAEC,GAAG,EAAEgB,SAAS,CAACC,CAAjB;YAAoBhB,GAAG,EAAEe,SAAS,CAACE;UAAnC;QADD,CAAD,CAAR;MAGD;IACF,CAPD;;IAQAZ,EAAE,CAACa,aAAH,CAAkB,GAAEhB,aAAc,EAAlC,EAAqCO,cAArC;EACD,CAXD;;EAeA,oBACF,QAAC,GAAD,CAAK;EAAL;IACE,MAAM,EAAEd,KAAK,CAACG,MADhB;IAEE,OAAO,EAAEH,KAAK,CAACM,OAFjB;IAGE,KAAK,EAAE;MACF;MACAkB,KAAK,EAAE,MAFL;MAGFC,MAAM,EAAE;IAHN,CAHT;IAQM,KAAK,EAAE,CARb,CAQgB;IARhB;IAAA,uBASO;MAAA,wBACD;QAAO,QAAQ,EAAEC;MAAjB;QAAA;QAAA;QAAA;MAAA,QADC,eAED;QAAQ,OAAO,EAAEjB,SAAjB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFC;IAAA;MAAA;MAAA;MAAA;IAAA;EATP;IAAA;IAAA;IAAA;EAAA,QADE;AAkBD,CA5CD;;GAAMV,G;;KAAAA,G;AA8CN,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}