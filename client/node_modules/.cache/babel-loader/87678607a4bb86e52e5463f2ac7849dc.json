{"ast":null,"code":"var _jsxFileName = \"/home/leegenho/123/Node_server/client/src/hoc/auth.js\";\nimport React, { useEffect } from 'react';\nimport { useDispatch } from \"react-redux\";\nimport { auth } from \"../_actions/user_action\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function (SpecificComponent, option) {\n  var _s = $RefreshSig$();\n\n  let adminRoute = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n  //null    =>  아무나 출입이 가능한 페이지\n  //true    =>  로그인한 유저만 출입이 가능한 페이지\n  //false   =>  로그인한 유저는 출입 불가능한 페이지\n  function AuthenticationCheck() {\n    _s();\n\n    const dispatch = useDispatch();\n    useEffect(() => {\n      dispatch(auth()).then(response => {\n        console.log(response); //로그인 하지 않은 상태\n\n        if (!response.payload.isAuth) {\n          if (option) {\n            props.history.push(\"/loginPage\");\n          }\n        } else {\n          //로그인 한 상태\n          if (adminRoute && !response.payload.isAdmin) {\n            pr;\n          }\n        }\n      });\n    });\n    return /*#__PURE__*/_jsxDEV(SpecificComponent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this);\n  }\n\n  _s(AuthenticationCheck, \"rAh3tY+Iv6hWC9AI4Dm+rCbkwNE=\", false, function () {\n    return [useDispatch];\n  });\n\n  return AuthenticationCheck;\n}","map":{"version":3,"names":["React","useEffect","useDispatch","auth","SpecificComponent","option","adminRoute","AuthenticationCheck","dispatch","then","response","console","log","payload","isAuth","props","history","push","isAdmin","pr"],"sources":["/home/leegenho/123/Node_server/client/src/hoc/auth.js"],"sourcesContent":["\nimport React, { useEffect } from 'react';\nimport { useDispatch } from \"react-redux\"\nimport { auth } from \"../_actions/user_action\";\n\n\nexport default function (SpecificComponent, option, adminRoute = null) {\n    //null    =>  아무나 출입이 가능한 페이지\n    //true    =>  로그인한 유저만 출입이 가능한 페이지\n    //false   =>  로그인한 유저는 출입 불가능한 페이지\n    function AuthenticationCheck(){\n\n        const dispatch = useDispatch();\n        \n        useEffect(() => {\n\n            dispatch(auth()).then(response => {\n                console.log(response)\n                //로그인 하지 않은 상태\n                if(!response.payload.isAuth){\n                    if(option){\n                        props.history.push(\"/loginPage\")\n                    }\n                }else{\n                //로그인 한 상태\n                if(adminRoute && !response.payload.isAdmin){\n                    pr\n                }\n                }\n            })\n\n        })\n        return (\n            <SpecificComponent />\n        )\n    }\n    return AuthenticationCheck\n}"],"mappings":";AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,IAAT,QAAqB,yBAArB;;AAGA,eAAe,UAAUC,iBAAV,EAA6BC,MAA7B,EAAwD;EAAA;;EAAA,IAAnBC,UAAmB,uEAAN,IAAM;;EACnE;EACA;EACA;EACA,SAASC,mBAAT,GAA8B;IAAA;;IAE1B,MAAMC,QAAQ,GAAGN,WAAW,EAA5B;IAEAD,SAAS,CAAC,MAAM;MAEZO,QAAQ,CAACL,IAAI,EAAL,CAAR,CAAiBM,IAAjB,CAAsBC,QAAQ,IAAI;QAC9BC,OAAO,CAACC,GAAR,CAAYF,QAAZ,EAD8B,CAE9B;;QACA,IAAG,CAACA,QAAQ,CAACG,OAAT,CAAiBC,MAArB,EAA4B;UACxB,IAAGT,MAAH,EAAU;YACNU,KAAK,CAACC,OAAN,CAAcC,IAAd,CAAmB,YAAnB;UACH;QACJ,CAJD,MAIK;UACL;UACA,IAAGX,UAAU,IAAI,CAACI,QAAQ,CAACG,OAAT,CAAiBK,OAAnC,EAA2C;YACvCC,EAAE;UACL;QACA;MACJ,CAbD;IAeH,CAjBQ,CAAT;IAkBA,oBACI,QAAC,iBAAD;MAAA;MAAA;MAAA;IAAA,QADJ;EAGH;;EA7BkE,GAI1DZ,mBAJ0D;IAAA,QAM9CL,WAN8C;EAAA;;EA8BnE,OAAOK,mBAAP;AACH"},"metadata":{},"sourceType":"module"}