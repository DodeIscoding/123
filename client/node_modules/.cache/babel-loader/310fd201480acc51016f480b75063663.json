{"ast":null,"code":"var _jsxFileName = \"/home/leegenho/123/Node_server/client/src/components/views/test/PopupPostCode.js\";\nimport React from 'react';\nimport DaumPostcode from \"react-daum-postcode\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet number = 0;\n\nconst PopupPostCode = props => {\n  // 우편번호 검색 후 주소 클릭 시 실행될 함수, data callback 용\n  const handlePostCode = data => {\n    let fullAddress = data.address;\n    let extraAddress = '';\n\n    if (data.addressType === 'R') {\n      if (data.bname !== '') {\n        extraAddress += data.bname;\n      }\n\n      if (data.buildingName !== '') {\n        extraAddress += extraAddress !== '' ? `, ${data.buildingName}` : data.buildingName;\n      }\n\n      fullAddress += extraAddress !== '' ? ` (${extraAddress})` : '';\n    }\n\n    console.log(data);\n    console.log(fullAddress);\n    console.log(data.zonecode);\n    props.onClose();\n    document.getElementById(\"output\").innerText = data.query;\n    const newDiv = document.createElement('div');\n    const newText = document.createTextNode(fullAddress);\n    newDiv.appendChild(newText);\n    document.getElementById(\"scroll\").appendChild(newDiv);\n  };\n\n  new daum.Postcode({\n    onsearch: function (data1) {}\n  });\n  const postCodeStyle = {\n    display: \"block\",\n    position: \"absolute\",\n    width: \"365px\",\n    height: \"460px\",\n    padding: \"7px\"\n  };\n  const postCode_btn = {\n    position: \"absolute\",\n    width: \"100px\",\n    height: \"100px\",\n    margin: \"450px 0px 0px 0px\"\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(DaumPostcode, {\n      style: postCodeStyle,\n      onComplete: handlePostCode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: () => {\n        props.onClose();\n      },\n      style: postCode_btn,\n      children: \"\\uB2EB\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n\n_c = PopupPostCode;\nexport default PopupPostCode;\n\nvar _c;\n\n$RefreshReg$(_c, \"PopupPostCode\");","map":{"version":3,"names":["React","DaumPostcode","number","PopupPostCode","props","handlePostCode","data","fullAddress","address","extraAddress","addressType","bname","buildingName","console","log","zonecode","onClose","document","getElementById","innerText","query","newDiv","createElement","newText","createTextNode","appendChild","daum","Postcode","onsearch","data1","postCodeStyle","display","position","width","height","padding","postCode_btn","margin"],"sources":["/home/leegenho/123/Node_server/client/src/components/views/test/PopupPostCode.js"],"sourcesContent":["import React from 'react';\nimport DaumPostcode from \"react-daum-postcode\";\nlet number = 0;\nconst PopupPostCode = (props) => {\n\t// 우편번호 검색 후 주소 클릭 시 실행될 함수, data callback 용\n    const handlePostCode = (data) => {\n        let fullAddress = data.address;\n        let extraAddress = ''; \n        \n        if (data.addressType === 'R') {\n          if (data.bname !== '') {\n            extraAddress += data.bname;\n          }\n          if (data.buildingName !== '') {\n            extraAddress += (extraAddress !== '' ? `, ${data.buildingName}` : data.buildingName);\n          }\n          fullAddress += (extraAddress !== '' ? ` (${extraAddress})` : '');\n        }\n        console.log(data)\n        console.log(fullAddress)\n        console.log(data.zonecode)\n        props.onClose()\n        document.getElementById(\"output\").innerText = data.query\n        const newDiv = document.createElement('div');\n        const newText = document.createTextNode(fullAddress);\n        newDiv.appendChild(newText);\n        document.getElementById(\"scroll\").appendChild(newDiv)\n    }\n    new daum.Postcode({\n      onsearch: function(data1) {\n        \n\n      }\n  });\n    const postCodeStyle = {\n        display: \"block\",\n        position: \"absolute\",\n        width: \"365px\",\n        height: \"460px\",\n        padding: \"7px\",\n      };\n      const postCode_btn = {\n        position: \"absolute\",\n        width: \"100px\",\n        height: \"100px\",\n        margin: \"450px 0px 0px 0px\",\n      };\n    return(\n        <div>\n                <DaumPostcode style={postCodeStyle} onComplete={handlePostCode} />\n                <button type='button' onClick={() => {props.onClose()}} style={postCode_btn}>닫기</button>\n        </div>\n    )\n}\n \nexport default PopupPostCode;"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,qBAAzB;;AACA,IAAIC,MAAM,GAAG,CAAb;;AACA,MAAMC,aAAa,GAAIC,KAAD,IAAW;EAChC;EACG,MAAMC,cAAc,GAAIC,IAAD,IAAU;IAC7B,IAAIC,WAAW,GAAGD,IAAI,CAACE,OAAvB;IACA,IAAIC,YAAY,GAAG,EAAnB;;IAEA,IAAIH,IAAI,CAACI,WAAL,KAAqB,GAAzB,EAA8B;MAC5B,IAAIJ,IAAI,CAACK,KAAL,KAAe,EAAnB,EAAuB;QACrBF,YAAY,IAAIH,IAAI,CAACK,KAArB;MACD;;MACD,IAAIL,IAAI,CAACM,YAAL,KAAsB,EAA1B,EAA8B;QAC5BH,YAAY,IAAKA,YAAY,KAAK,EAAjB,GAAuB,KAAIH,IAAI,CAACM,YAAa,EAA7C,GAAiDN,IAAI,CAACM,YAAvE;MACD;;MACDL,WAAW,IAAKE,YAAY,KAAK,EAAjB,GAAuB,KAAIA,YAAa,GAAxC,GAA6C,EAA7D;IACD;;IACDI,OAAO,CAACC,GAAR,CAAYR,IAAZ;IACAO,OAAO,CAACC,GAAR,CAAYP,WAAZ;IACAM,OAAO,CAACC,GAAR,CAAYR,IAAI,CAACS,QAAjB;IACAX,KAAK,CAACY,OAAN;IACAC,QAAQ,CAACC,cAAT,CAAwB,QAAxB,EAAkCC,SAAlC,GAA8Cb,IAAI,CAACc,KAAnD;IACA,MAAMC,MAAM,GAAGJ,QAAQ,CAACK,aAAT,CAAuB,KAAvB,CAAf;IACA,MAAMC,OAAO,GAAGN,QAAQ,CAACO,cAAT,CAAwBjB,WAAxB,CAAhB;IACAc,MAAM,CAACI,WAAP,CAAmBF,OAAnB;IACAN,QAAQ,CAACC,cAAT,CAAwB,QAAxB,EAAkCO,WAAlC,CAA8CJ,MAA9C;EACH,CAtBD;;EAuBA,IAAIK,IAAI,CAACC,QAAT,CAAkB;IAChBC,QAAQ,EAAE,UAASC,KAAT,EAAgB,CAGzB;EAJe,CAAlB;EAMA,MAAMC,aAAa,GAAG;IAClBC,OAAO,EAAE,OADS;IAElBC,QAAQ,EAAE,UAFQ;IAGlBC,KAAK,EAAE,OAHW;IAIlBC,MAAM,EAAE,OAJU;IAKlBC,OAAO,EAAE;EALS,CAAtB;EAOE,MAAMC,YAAY,GAAG;IACnBJ,QAAQ,EAAE,UADS;IAEnBC,KAAK,EAAE,OAFY;IAGnBC,MAAM,EAAE,OAHW;IAInBG,MAAM,EAAE;EAJW,CAArB;EAMF,oBACI;IAAA,wBACQ,QAAC,YAAD;MAAc,KAAK,EAAEP,aAArB;MAAoC,UAAU,EAAEzB;IAAhD;MAAA;MAAA;MAAA;IAAA,QADR,eAEQ;MAAQ,IAAI,EAAC,QAAb;MAAsB,OAAO,EAAE,MAAM;QAACD,KAAK,CAACY,OAAN;MAAgB,CAAtD;MAAwD,KAAK,EAAEoB,YAA/D;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFR;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAMH,CAlDD;;KAAMjC,a;AAoDN,eAAeA,aAAf"},"metadata":{},"sourceType":"module"}