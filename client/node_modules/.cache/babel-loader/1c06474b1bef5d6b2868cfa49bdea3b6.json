{"ast":null,"code":"var _jsxFileName = \"/home/leegenho/123/Node_server/client/src/components/views/test/PopupPostCode.js\";\nimport React, { useState } from 'react';\nimport DaumPostcode from \"react-daum-postcode\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PopupPostCode = props => {\n  var _s = $RefreshSig$();\n\n  // 우편번호 검색 후 주소 클릭 시 실행될 함수, data callback 용\n  const handlePostCode = () => {\n    _s();\n\n    let fullAddress = data.address;\n    let extraAddress = '';\n\n    if (data.addressType === 'R') {\n      if (data.bname !== '') {\n        extraAddress += data.bname;\n      }\n\n      if (data.buildingName !== '') {\n        extraAddress += extraAddress !== '' ? `, ${data.buildingName}` : data.buildingName;\n      }\n\n      fullAddress += extraAddress !== '' ? ` (${extraAddress})` : '';\n    }\n\n    const [address, setAddress] = useState();\n    console.log(fullAddress);\n    console.log(data.zonecode);\n    console.log(props);\n    props.onClose();\n    document.getElementById(\"output\").innerText = data.query; // const newDiv = document.createElement('div');\n    // const newText = document.createTextNode(fullAddress);\n    // newDiv.appendChild(newText);\n    // document.getElementById(\"scroll\").appendChild(newDiv)\n  };\n\n  _s(handlePostCode, \"dUYSaHilsZ7zDGxusMA9Vvyeo84=\");\n\n  const postCodeStyle = {\n    display: \"block\",\n    position: \"absolute\",\n    width: \"365px\",\n    height: \"460px\",\n    padding: \"7px\"\n  };\n  const postCode_btn = {\n    width: \"100px\",\n    height: \"50px\",\n    margin: \"450px 0px 0px 0px\"\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(DaumPostcode, {\n      style: postCodeStyle,\n      onComplete: handlePostCode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n\n_c = PopupPostCode;\nexport default PopupPostCode;\n\nvar _c;\n\n$RefreshReg$(_c, \"PopupPostCode\");","map":{"version":3,"names":["React","useState","DaumPostcode","PopupPostCode","props","handlePostCode","fullAddress","data","address","extraAddress","addressType","bname","buildingName","setAddress","console","log","zonecode","onClose","document","getElementById","innerText","query","postCodeStyle","display","position","width","height","padding","postCode_btn","margin"],"sources":["/home/leegenho/123/Node_server/client/src/components/views/test/PopupPostCode.js"],"sourcesContent":["import React,{ useState } from 'react';\nimport DaumPostcode from \"react-daum-postcode\";\n\nconst PopupPostCode = (props) => {\n\t// 우편번호 검색 후 주소 클릭 시 실행될 함수, data callback 용\n    const handlePostCode = () => {\n        let fullAddress = data.address;\n        let extraAddress = ''; \n        \n        if (data.addressType === 'R') {\n          if (data.bname !== '') {\n            extraAddress += data.bname;\n          }\n          if (data.buildingName !== '') {\n            extraAddress += (extraAddress !== '' ? `, ${data.buildingName}` : data.buildingName);\n          }\n          fullAddress += (extraAddress !== '' ? ` (${extraAddress})` : '');\n        }\n        const [address, setAddress] = useState();\n        console.log(fullAddress)\n        console.log(data.zonecode)\n        console.log(props)\n        props.onClose()\n        document.getElementById(\"output\").innerText = data.query\n        // const newDiv = document.createElement('div');\n        // const newText = document.createTextNode(fullAddress);\n        // newDiv.appendChild(newText);\n        // document.getElementById(\"scroll\").appendChild(newDiv)\n    }\n    const postCodeStyle = {\n        display: \"block\",\n        position: \"absolute\",\n        width: \"365px\",\n        height: \"460px\",\n        padding: \"7px\",\n      };\n      const postCode_btn = {\n        width: \"100px\",\n        height: \"50px\",\n        margin: \"450px 0px 0px 0px\",\n      };\n    return(\n        <div>\n                <DaumPostcode style={postCodeStyle} onComplete={handlePostCode} />\n                {/* <button type='button' onClick={() => {props.onClose()}} style={postCode_btn}>닫기</button> */}\n        </div>\n    )\n}\n \nexport default PopupPostCode;"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA+B,OAA/B;AACA,OAAOC,YAAP,MAAyB,qBAAzB;;;AAEA,MAAMC,aAAa,GAAIC,KAAD,IAAW;EAAA;;EAChC;EACG,MAAMC,cAAc,GAAG,MAAM;IAAA;;IACzB,IAAIC,WAAW,GAAGC,IAAI,CAACC,OAAvB;IACA,IAAIC,YAAY,GAAG,EAAnB;;IAEA,IAAIF,IAAI,CAACG,WAAL,KAAqB,GAAzB,EAA8B;MAC5B,IAAIH,IAAI,CAACI,KAAL,KAAe,EAAnB,EAAuB;QACrBF,YAAY,IAAIF,IAAI,CAACI,KAArB;MACD;;MACD,IAAIJ,IAAI,CAACK,YAAL,KAAsB,EAA1B,EAA8B;QAC5BH,YAAY,IAAKA,YAAY,KAAK,EAAjB,GAAuB,KAAIF,IAAI,CAACK,YAAa,EAA7C,GAAiDL,IAAI,CAACK,YAAvE;MACD;;MACDN,WAAW,IAAKG,YAAY,KAAK,EAAjB,GAAuB,KAAIA,YAAa,GAAxC,GAA6C,EAA7D;IACD;;IACD,MAAM,CAACD,OAAD,EAAUK,UAAV,IAAwBZ,QAAQ,EAAtC;IACAa,OAAO,CAACC,GAAR,CAAYT,WAAZ;IACAQ,OAAO,CAACC,GAAR,CAAYR,IAAI,CAACS,QAAjB;IACAF,OAAO,CAACC,GAAR,CAAYX,KAAZ;IACAA,KAAK,CAACa,OAAN;IACAC,QAAQ,CAACC,cAAT,CAAwB,QAAxB,EAAkCC,SAAlC,GAA8Cb,IAAI,CAACc,KAAnD,CAlByB,CAmBzB;IACA;IACA;IACA;EACH,CAvBD;;EAF6B,GAEvBhB,cAFuB;;EA0B7B,MAAMiB,aAAa,GAAG;IAClBC,OAAO,EAAE,OADS;IAElBC,QAAQ,EAAE,UAFQ;IAGlBC,KAAK,EAAE,OAHW;IAIlBC,MAAM,EAAE,OAJU;IAKlBC,OAAO,EAAE;EALS,CAAtB;EAOE,MAAMC,YAAY,GAAG;IACnBH,KAAK,EAAE,OADY;IAEnBC,MAAM,EAAE,MAFW;IAGnBG,MAAM,EAAE;EAHW,CAArB;EAKF,oBACI;IAAA,uBACQ,QAAC,YAAD;MAAc,KAAK,EAAEP,aAArB;MAAoC,UAAU,EAAEjB;IAAhD;MAAA;MAAA;MAAA;IAAA;EADR;IAAA;IAAA;IAAA;EAAA,QADJ;AAMH,CA5CD;;KAAMF,a;AA8CN,eAAeA,aAAf"},"metadata":{},"sourceType":"module"}